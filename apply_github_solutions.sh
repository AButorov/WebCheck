#!/bin/zsh

echo "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π –∏–∑ GitHub –¥–ª—è WebCheck"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

echo "‚úÖ –ù–∞—Ö–æ–¥–∏–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"

# 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å undefined id –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
echo ""
echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π..."

# –°–æ–∑–¥–∞—ë–º —É–ª—É—á—à–µ–Ω–Ω—ã–π message handler –¥–ª—è background
cat > src/background/messageHandler.ts << 'EOF'
/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è background
 */
import browser from 'webextension-polyfill'
import { getMonitoringStats, getPerformanceStats } from './monitor'
import { sendMessageToPopup } from './safeMessaging'

// –¢–∏–ø –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
type MessageHandler = (data: any, sender: browser.Runtime.MessageSender) => Promise<any>

// –ö–∞—Ä—Ç–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
const handlers: Record<string, MessageHandler> = {
  'get-monitoring-stats': async () => {
    try {
      const stats = await getMonitoringStats()
      return { success: true, stats }
    } catch (error) {
      console.error('[MESSAGE HANDLER] Error getting monitoring stats:', error)
      return {
        success: false,
        error: error instanceof Error ? error.message : String(error)
      }
    }
  },
  
  'get-performance-stats': async () => {
    try {
      const stats = await getPerformanceStats()
      return { success: true, stats }
    } catch (error) {
      console.error('[MESSAGE HANDLER] Error getting performance stats:', error)
      return {
        success: false,
        error: error instanceof Error ? error.message : String(error)
      }
    }
  },
  
  'update-task': async (data) => {
    // –ó–∞—â–∏—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if (!data || !data.taskId) {
      console.error('[MESSAGE HANDLER] Invalid update-task data:', data)
      return { success: false, error: 'Missing taskId' }
    }
    
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ popup –µ—Å–ª–∏ –æ–Ω –æ—Ç–∫—Ä—ã—Ç
      await sendMessageToPopup({
        type: 'task-updated',
        taskId: data.taskId,
        updates: data.updates
      })
      return { success: true }
    } catch (error) {
      console.error('[MESSAGE HANDLER] Error updating task:', error)
      return { success: false, error: error instanceof Error ? error.message : String(error) }
    }
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
 */
export function initMessageHandler(): void {
  console.log('[MESSAGE HANDLER] Initializing message handler')
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  browser.runtime.onMessage.addListener((message, sender, sendResponse) => {
    // –ó–∞—â–∏—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!message || typeof message !== 'object') {
      console.warn('[MESSAGE HANDLER] Invalid message format:', message)
      sendResponse({ success: false, error: 'Invalid message format' })
      return false
    }
    
    const { type, data } = message
    
    if (!type || typeof type !== 'string') {
      console.warn('[MESSAGE HANDLER] Message missing type:', message)
      sendResponse({ success: false, error: 'Message type required' })
      return false
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    const handler = handlers[type]
    
    if (!handler) {
      console.warn('[MESSAGE HANDLER] Unknown message type:', type)
      sendResponse({ success: false, error: `Unknown message type: ${type}` })
      return false
    }
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    handler(data, sender)
      .then(result => {
        sendResponse(result)
      })
      .catch(error => {
        console.error(`[MESSAGE HANDLER] Error handling ${type}:`, error)
        sendResponse({
          success: false,
          error: error instanceof Error ? error.message : String(error)
        })
      })
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    return true
  })
  
  console.log('[MESSAGE HANDLER] Message handler initialized')
}

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
 */
export function registerMessageHandler(type: string, handler: MessageHandler): void {
  handlers[type] = handler
  console.log(`[MESSAGE HANDLER] Registered handler for ${type}`)
}
EOF

# 2. –û–±–Ω–æ–≤–ª—è–µ–º background/index.ts –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
echo ""
echo "üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ background/index.ts..."

# –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
sed -i.bak '1s/^/import { initMessageHandler } from '\''\.\/messageHandler'\''\n/' src/background/index.ts

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ—Å–ª–µ initMonitor
sed -i.bak '/initMonitor()/a\
\
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π\
initMessageHandler()' src/background/index.ts

# 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏ –≤ offscreen
echo ""
echo "üìù –£–ª—É—á—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞–π–º–∞—É—Ç–æ–≤ –≤ offscreen.js..."

# –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º retry –ª–æ–≥–∏–∫—É
sed -i.bak 's/IFRAME_LOAD_TIMEOUT: 30000/IFRAME_LOAD_TIMEOUT: 60000/' src/offscreen/offscreen.js
sed -i.bak 's/CONTENT_EXTRACTION_TIMEOUT: 25000/CONTENT_EXTRACTION_TIMEOUT: 45000/' src/offscreen/offscreen.js
sed -i.bak 's/PAGE_LOAD_DELAY: 3000/PAGE_LOAD_DELAY: 5000/' src/offscreen/offscreen.js
sed -i.bak 's/MAX_RETRY_ATTEMPTS: 2/MAX_RETRY_ATTEMPTS: 3/' src/offscreen/offscreen.js

# 4. –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ taskQueue
echo ""
echo "üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞—â–∏—Ç–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ taskQueue.ts..."

# –°–æ–∑–¥–∞—ë–º –ø–∞—Ç—á –¥–ª—è taskQueue
cat > src/background/taskQueue_patch.ts << 'EOF'
// –î–æ–±–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ processQueueItem:
if (!item || !item.task || !item.task.id) {
  console.error('[TASK QUEUE] Invalid queue item:', item)
  throw new Error('Invalid queue item structure')
}

// –î–æ–±–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ addTaskToQueue:
if (!task || typeof task !== 'object' || !task.id) {
  console.error('[TASK QUEUE] Invalid task object:', task)
  throw new Error('Invalid task: missing required properties')
}
EOF

# 5. –°–æ–∑–¥–∞—ë–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞..."

cat > src/utils/safeAccess.ts << 'EOF'
/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–ª–æ–∂–µ–Ω–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞
 */
export function safeGet<T = any>(
  obj: any,
  path: string,
  defaultValue?: T
): T | undefined {
  try {
    const keys = path.split('.')
    let result = obj
    
    for (const key of keys) {
      if (result == null) {
        return defaultValue
      }
      result = result[key]
    }
    
    return result ?? defaultValue
  } catch {
    return defaultValue
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤
 */
export function hasRequiredProps<T extends object>(
  obj: any,
  props: (keyof T)[]
): obj is T {
  if (!obj || typeof obj !== 'object') {
    return false
  }
  
  return props.every(prop => prop in obj && obj[prop] != null)
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å fallback
 */
export async function safeTry<T>(
  fn: () => T | Promise<T>,
  fallback: T,
  errorHandler?: (error: unknown) => void
): Promise<T> {
  try {
    return await fn()
  } catch (error) {
    if (errorHandler) {
      errorHandler(error)
    }
    return fallback
  }
}
EOF

# 6. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å drive_search
echo ""
echo "üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è google_drive_search..."

cat > src/background/driveSearchStub.ts << 'EOF'
/**
 * –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è google_drive_search
 * TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω
 */
import browser from 'webextension-polyfill'

export async function google_drive_search(params: any): Promise<any> {
  console.warn('[DRIVE SEARCH] Google Drive search is not implemented yet')
  return {
    success: false,
    error: 'Google Drive search is not available in this version',
    results: []
  }
}
EOF

# 7. –°–æ–∑–¥–∞—ë–º debug —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è undefined errors
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ debug —É—Ç–∏–ª–∏—Ç—ã..."

cat > src/utils/debugger.ts << 'EOF'
/**
 * Debug —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è undefined errors
 */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
export function setupGlobalErrorHandler(): void {
  // –ü–µ—Ä–µ—Ö–≤–∞—Ç –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
  self.addEventListener('error', (event) => {
    console.error('[GLOBAL ERROR]', {
      message: event.message,
      filename: event.filename,
      lineno: event.lineno,
      colno: event.colno,
      error: event.error,
      stack: event.error?.stack
    })
  })
  
  // –ü–µ—Ä–µ—Ö–≤–∞—Ç rejected promises
  self.addEventListener('unhandledrejection', (event) => {
    console.error('[UNHANDLED REJECTION]', {
      reason: event.reason,
      promise: event.promise,
      stack: event.reason?.stack
    })
  })
}

/**
 * –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π
 */
export function wrapFunction<T extends (...args: any[]) => any>(
  fn: T,
  name: string
): T {
  return ((...args: Parameters<T>) => {
    try {
      console.log(`[DEBUG] Calling ${name} with args:`, args)
      const result = fn(...args)
      
      // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–º–∏—Å, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
      if (result && typeof result.catch === 'function') {
        return result.catch((error: any) => {
          console.error(`[DEBUG] Error in ${name}:`, error)
          throw error
        })
      }
      
      return result
    } catch (error) {
      console.error(`[DEBUG] Sync error in ${name}:`, error)
      throw error
    }
  }) as T
}
EOF

# 8. –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo ""
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -f src/background/*.bak
rm -f src/offscreen/*.bak
rm -f src/background/taskQueue_patch.ts

echo ""
echo "‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "  1. –°–æ–∑–¥–∞–Ω —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∑–∞—â–∏—Ç–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏"
echo "  2. –£–≤–µ–ª–∏—á–µ–Ω—ã —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è offscreen –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
echo "  3. –î–æ–±–∞–≤–ª–µ–Ω—ã —É—Ç–∏–ª–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º"
echo "  4. –°–æ–∑–¥–∞–Ω–∞ debug —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫"
echo "  5. –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è google_drive_search"
echo ""
echo "üî® –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–±–æ—Ä–∫—É: ./build.sh"
echo "  2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ Chrome"
echo "  3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å Service Worker"
echo "  4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "     chrome.runtime.sendMessage({type: 'get-monitoring-stats'}).then(console.log)"
echo "     chrome.runtime.sendMessage({type: 'get-performance-stats'}).then(console.log)"
