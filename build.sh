#!/bin/zsh

# Web Check - –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏

set -e # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

echo "üî® Web Check - –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
echo "============================="

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±–æ—Ä–∫–∏
BUILD_MODE="${1:-production}"

case "$1" in
"clean")
  echo "üßπ –†–µ–∂–∏–º: –ß–∏—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞"
  echo ""
  echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."

  # –£–¥–∞–ª—è–µ–º –≤—Å–µ
  rm -rf node_modules/
  rm -rf dist/
  rm -rf .vite/
  rm -rf package-lock.json yarn.lock

  # –û—á–∏—â–∞–µ–º –∫—ç—à–∏
  if command -v pnpm &>/dev/null; then
    pnpm store prune 2>/dev/null || true
  fi
  if command -v npm &>/dev/null; then
    npm cache clean --force 2>/dev/null || true
  fi

  echo "  ‚úÖ –ü—Ä–æ–µ–∫—Ç –æ—á–∏—â–µ–Ω"

  # –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  echo ""
  echo "üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
  pnpm install
  echo "  ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
  ;;
*)
  echo "üéØ –†–µ–∂–∏–º: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–±–æ—Ä–∫–∞"

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  if [ ! -d "node_modules" ]; then
    echo ""
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    pnpm install
  fi
  ;;
esac

# –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∫—ç—à —Å–±–æ—Ä–∫–∏
echo ""
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ —Å–±–æ—Ä–∫–∏..."
rm -rf dist/
rm -rf .vite/

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
required_files=("package.json" "vite.config.ts" "tsconfig.json" "src/manifest.ts" "src/background/index.ts")
for file in "${required_files[@]}"; do
  if [ -f "$file" ]; then
    echo "  ‚úÖ $file"
  else
    echo "  ‚ùå $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    exit 1
  fi
done

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
echo ""
echo "‚öôÔ∏è –ó–∞–ø—É—Å–∫ Vite —Å–±–æ—Ä–∫–∏..."

if node node_modules/vite/bin/vite.js build; then
  echo "‚úÖ Vite —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
  echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Vite"
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–±–æ—Ä–∫–∏..."

if [ ! -f "dist/manifest.json" ]; then
  echo "‚ùå manifest.json –Ω–µ —Å–æ–∑–¥–∞–Ω"
  exit 1
fi

if [ ! -f "dist/service-worker-loader.js" ]; then
  echo "‚ùå service-worker-loader.js –Ω–µ —Å–æ–∑–¥–∞–Ω"
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º service worker
if [ -f "dist/service-worker-loader.js" ]; then
  file_size=$(wc -c <"dist/service-worker-loader.js")

  if grep -q "import.*assets.*js.*index\.ts\.js" dist/service-worker-loader.js; then
    echo "‚úÖ service-worker-loader.js —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç ($file_size –±–∞–π—Ç)"

    if [ -f "dist/assets/js/index.ts.js" ]; then
      bg_file_size=$(wc -c <"dist/assets/js/index.ts.js")
      if [ $bg_file_size -gt 1000 ]; then
        echo "‚úÖ Background script –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω ($bg_file_size –±–∞–π—Ç)"
      else
        echo "‚ùå Background script —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π ($bg_file_size –±–∞–π—Ç)"
        exit 1
      fi
    else
      echo "‚ùå –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–π background script –Ω–µ –Ω–∞–π–¥–µ–Ω"
      exit 1
    fi
  else
    echo "‚ùå service-worker-loader.js —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥:"
    cat dist/service-worker-loader.js
    exit 1
  fi
fi

# –ö–æ–ø–∏—Ä—É–µ–º content script
echo ""
echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

mkdir -p dist/content-script

if [ -f "src/content-script/index-legacy.js" ]; then
  cp src/content-script/index-legacy.js dist/content-script/index-legacy.js
  echo "‚úÖ Content script —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
else
  echo "‚ùå src/content-script/index-legacy.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å manifest.json
if [ -f "dist/manifest.json" ]; then
  if grep -q "content-script/index-legacy.js" dist/manifest.json; then
    echo "‚úÖ Manifest.json —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π content script"
  else
    echo "‚ö†Ô∏è Manifest.json –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏"
  fi
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo ""
echo "üìÇ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ dist/:"
if [ -d "dist" ]; then
  file_count=$(find dist -type f | wc -l)
  echo "  üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: $file_count"

  echo "  üìÑ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:"
  [ -f "dist/manifest.json" ] && echo "    ‚úÖ manifest.json ($(wc -c <dist/manifest.json) –±–∞–π—Ç)"
  [ -f "dist/service-worker-loader.js" ] && echo "    ‚úÖ service-worker-loader.js ($(wc -c <dist/service-worker-loader.js) –±–∞–π—Ç)"
  [ -f "dist/content-script/index-legacy.js" ] && echo "    ‚úÖ content-script/index-legacy.js ($(wc -c <dist/content-script/index-legacy.js) –±–∞–π—Ç)"

  [ -d "dist/src/ui/popup" ] && echo "    ‚úÖ popup UI"
  [ -d "dist/src/ui/options" ] && echo "    ‚úÖ options UI"
  [ -d "dist/offscreen" ] && echo "    ‚úÖ offscreen files"
  [ -d "dist/assets" ] && echo "    ‚úÖ assets ($(find dist/assets -type f | wc -l) —Ñ–∞–π–ª–æ–≤)"
  [ -d "dist/icons" ] && echo "    ‚úÖ icons"
fi

echo ""
echo "üéâ –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
echo ""
echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:"
echo "  ‚úÖ TypeScript —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω"
echo "  ‚úÖ Vue –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã"
echo "  ‚úÖ Content script —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
echo "  ‚úÖ Manifest.json —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"
echo "  ‚úÖ Background script –≥–æ—Ç–æ–≤"
echo ""
echo "üëâ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –≤ Chrome:"
echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ chrome://extensions/"
echo "   2. –í–∫–ª—é—á–∏—Ç–µ '–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞'"
echo "   3. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ'"
echo "   4. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É 'dist'"
echo ""
echo "‚ú® –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
